# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'screen1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.uic import loadUi
from PyQt5.QtWidgets import QDialog, QMainWindow, QPushButton, QVBoxLayout, QLabel, QWidget ,QApplication, QInputDialog, QLineEdit,QFileDialog
from PyQt5.QtGui import QIcon, QPixmap

import cv2
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QImage, QPixmap
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QPushButton, QVBoxLayout, QWidget, QMessageBox, QFileDialog



class Screen0(QDialog):

    def __init__(self):
        super(Screen0, self).__init__()
        loadUi("screen0.ui", self)
        self.pushButton1.clicked.connect(self.gotoScreen1)
        self.pushButton2.clicked.connect(self.gotoScreen2)
        self.pushButton3.clicked.connect(self.gotoScreen3)

    def gotoScreen1(self): 
        screen1 = Screen1()
        widget.addWidget(screen1)   
        widget.setCurrentIndex(widget.currentIndex() + 1)

    def gotoScreen2(self): 
        screen2 = Screen2()
        widget.addWidget(screen2)   
        widget.setCurrentIndex(widget.currentIndex() + 2)

    def gotoScreen3(self):  
        screen3 = Screen3()
        widget.addWidget(screen3)   
        widget.setCurrentIndex(widget.currentIndex() + 3)
    
class Screen1(QDialog):

    def __init__(self):
        super(Screen1, self).__init__()
        loadUi("screen1.ui", self)
        self.pushButton1.clicked.connect(self.gotoScreen2)
        self.pushButton2.clicked.connect(self.gotoScreen3)

    def gotoScreen2(self): 
        screen2 = Screen2()
        widget.addWidget(screen2)   
        widget.setCurrentIndex(widget.currentIndex() + 1)

    def gotoScreen3(self): 
        screen3 = Screen3()
        widget.addWidget(screen3)   
        widget.setCurrentIndex(widget.currentIndex() + 2)

class Screen2(QDialog):
    def __init__(self):
        super(Screen2, self).__init__()  # Use Screen2, not Ui_Screen2
        loadUi("screen2.ui", self)
        self.pushButton1.clicked.connect(self.gotoScreen3)
        self.pushButton2.clicked.connect(self.gotoScreen1)

    def gotoScreen1(self):
        screen1 = Screen1()
        widget.addWidget(screen1)  
        widget.setCurrentIndex(widget.currentIndex() - 1)

    def gotoScreen3(self):
        screen3=Screen3()
        widget.addWidget(screen3)
        widget.setCurrentIndex(widget.currentIndex() + 1)

class Screen3(QDialog):

    def __init__(self):
        super(Screen3, self).__init__()  
        loadUi("screen3.ui", self)
        self.pushButton1.clicked.connect(self.gotoScreen1)
        self.pushButton2.clicked.connect(self.gotoScreen2)   

    def gotoScreen1(self):
        screen1 = Screen1()
        widget.addWidget(screen1)  
        widget.setCurrentIndex(widget.currentIndex() - 2)

    def gotoScreen2(self):
        screen2=Screen2()
        widget.addWidget(screen2)
        widget.setCurrentIndex(widget.currentIndex() - 1)
    
    def on_button_clicked(self, checked=None):
        #create new windows when the button is pressed.
        if checked == None: return
        dialog=QDialog()
        #dialog.ui=
        #dialog.ui = Ui_MyDialog()
        dialog.ui.setupUi(dialog)
        dialog.setAttribute(QtCore.Qt.WA_DeleteOnClose)
        dialog.exec_()

#class App(QWidget):

    def __init__(self):
        super().__init__()
        self.title = 'PyQt5 file dialogs - pythonspot.com'
        self.left = 10
        self.top = 10
        self.width = 640
        self.height = 480
        self.initUI()
    
    def initUI(self):
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)
        
        self.openFileNameDialog()
        self.openFileNamesDialog()
        self.saveFileDialog()
        
        self.show()
    
    def openFileNameDialog(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        fileName, _ = QFileDialog.getOpenFileName(self,"QFileDialog.getOpenFileName()", "","All Files (*);;Python Files (*.py)", options=options)
        if fileName:
            print(fileName)
    
    def openFileNamesDialog(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        files, _ = QFileDialog.getOpenFileNames(self,"QFileDialog.getOpenFileNames()", "","All Files (*);;Python Files (*.py)", options=options)
        if files:
            print(files)
    
    def saveFileDialog(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        fileName, _ = QFileDialog.getSaveFileName(self,"QFileDialog.getSaveFileName()","","All Files (*);;Text Files (*.txt)", options=options)
        if fileName:
            print(fileName)
    
class ImageFileDialogExample(QMainWindow):
    def __init__(self):
        super().__init__()

        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout()

        self.label = QLabel(self)
        layout.addWidget(self.label)

        open_button = QPushButton('Open Image', self)
        open_button.clicked.connect(self.open_image)
        layout.addWidget(open_button)

        save_button = QPushButton('Save Image', self)
        save_button.clicked.connect(self.save_image)
        layout.addWidget(save_button)

        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

    def open_image(self):
        options = QFileDialog.Options()
        file_name, _ = QFileDialog.getOpenFileName(self, "Open Image File", "", "Images (*.png *.jpg *.bmp *.gif);;All Files (*)", options=options)

        if file_name:
            pixmap = QPixmap(file_name)
            self.label.setPixmap(pixmap)

    def save_image(self):
        options = QFileDialog.Options()
        file_name, _ = QFileDialog.getSaveFileName(self, "Save Image File", "", "Images (*.png *.jpg *.bmp *.gif);;All Files (*)", options=options)

        if file_name:
            pixmap = self.label.pixmap()
            if pixmap:
                pixmap.save(file_name)



        
# main
app = QApplication(sys.argv)
widget = QtWidgets.QStackedWidget()
mainwindow = Screen0()
#screen1= Screen1()
#screen2= Screen2()
#screen3= Screen3()
widget.addWidget(mainwindow)
#widget.addWidget(screen1)
#widget.addWidget(screen2)
#widget.addWidget(screen3)
#widget.resize(720, 720)
#widget.resize(widget.sizeHint());
widget.setFixedHeight(720)
widget.setFixedWidth(720)
widget.show()


try:
    sys.exit(app.exec_())
except:
    print("Exit")



